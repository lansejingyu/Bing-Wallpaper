name: Scheduled Python Job   # 工作流名称

on:
  schedule:
    - cron: '0 0 * * *'  # UTC 时间的 0 点 (对应北京时间 08:00)

  workflow_dispatch:

jobs:
  execute-script: # 任务ID（可自定义）
    runs-on: ubuntu-latest   # 运行环境，一般用最新版

    steps:
      # 步骤1：拉取仓库代码
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: '2025.4.5'  # 这里指定 tag 名称

      # 步骤2：设置Python环境
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"  # 需与你的代码兼容的版本

      # 步骤3（可选）：安装依赖
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      # 步骤4：运行Python脚本
      - name: Run Script
        run: python -u main.py --all --overwrite      # 路径要正确！（例如：src/main.py）

      # 步骤5（可选）：推送生成的文件到仓库
      # 追加推送文件的步骤
      # - name: Commit and Push
        # run: |
        #   git config --global user.name "GitHub Actions"
        #   git config --global user.email "actions@github.com"
        #   git add Bing_Wallpaper_url.json
        #   git commit -m "Update Bing wallpapers" || echo "No changes to commit"   # 忽略无变化的错误
        #   git push
        # # 需要允许GitHub Actions写入仓库权限

# 5. 提交更改到临时分支
      - name: Commit and Push to Temp Branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout -b auto-update-bing-$(date +%Y%m%d-%H%M%S)  # 按时间生成唯一临时分支名
          git add Bing_Wallpaper_url.json
          git commit -m "Update Bing wallpapers" || echo "No changes to commit"
          git push origin HEAD
      # 6. 创建 PR 并合并到主分支（如 main）
      - name: Create Pull Request and Merge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # 使用默认的 GitHub Token
        run: |
          BRANCH_NAME=$(git branch --show-current)
          gh pr create \
            --title "Automated Update: Bing Wallpapers ($(date +%Y-%m-%d))" \
            --body "Automatically updated Bing wallpapers." \
            --base master \
            --head "$BRANCH_NAME"
          gh pr merge --auto --merge "$BRANCH_NAME"
