name: Scheduled Python Job   # 工作流名称

on:
  schedule:
    - cron: '0 0 * * *'  # UTC 时间的 0 点 (对应北京时间 08:00)
      timezone: 'Asia/Shanghai'  # 指定时区生效
  workflow_dispatch:

jobs:
  execute-script: # 任务ID（可自定义）
    runs-on: ubuntu-latest   # 运行环境，一般用最新版

    steps:
      # 步骤1：拉取仓库代码
      - name: Checkout Code
        uses: actions/checkout@v4

      # 步骤2：设置Python环境
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"  # 需与你的代码兼容的版本

      # 步骤3（可选）：安装依赖
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      # 步骤4：运行Python脚本
      - name: Run Script
        run: python -u main.py --all --overwrite      # 路径要正确！（例如：src/main.py）

      # 步骤5（可选）：推送生成的文件到仓库
      # 追加推送文件的步骤
      - name: Commit and Push
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add Bing_Wallpaper_url.json
          git commit -m "Update Bing wallpapers" || echo "No changes to commit"   # 忽略无变化的错误
          git push
        # 需要允许GitHub Actions写入仓库权限

      - name: Sync Github Repos To Gitee  # 名字随便起
        uses: Yikun/hub-mirror-action@v1.1  # 使用Yikun/hub-mirror-action
        with:
          src: github/lansejingyu  # 源端账户名(github)
          dst: gitee/lansejingyu  # 目的端账户名(gitee)
          dst_key: -----BEGIN OPENSSH PRIVATE KEY-----
                  b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn
                  NhAAAAAwEAAQAAAYEAzIb+w+yOesgfUiCk5zndtR86uOe0Bew2qN3o+aZ8nw657LyDTb+6
                  12z0ulYH7E9S6iqOFmGK2M57EQMg47l++CcHtqzcdiLMGdBdf16Gl2EXuAYFywCJq8xOGz
                  XzSYFGi8Y9sY9iCOWft/zml7fJ7/Yft/ixI/xfYtCZjgefDo4zjq70Byr5w5eQi7CkAEUQ
                  qw9xTbSJnjekVYkvSoGOXovrD4VmF6aY6wCqR2TWXNhxrC428yVMXLab9cHD3h++n78FQG
                  c909X0fh4Me40cNxqp+wg2ibNR2/I582i7sXcWmBmw7YU87Yl3onaaf4VWRW2Ydj/XMYaI
                  p7tY7gWmwN1yIIbiEwJ2PH64gGUdJq0LK/iOLkRZJXuWS2iGssQivAWBpuH9sC5x89PGy/
                  yBXDD2vOAv1OADtDxZijgvtV/pv8Au1fvnu1fDyrR0Sdqa85DfTQCESu2HOstDZON7kEKS
                  Cx4gHHWc4UJNwGMX0cr5DEFZsq2+fWgOYShkJzORAAAFkM3foTfN36E3AAAAB3NzaC1yc2
                  EAAAGBAMyG/sPsjnrIH1IgpOc53bUfOrjntAXsNqjd6PmmfJ8Ouey8g02/utds9LpWB+xP
                  UuoqjhZhitjOexEDIOO5fvgnB7as3HYizBnQXX9ehpdhF7gGBcsAiavMThs180mBRovGPb
                  GPYgjln7f85pe3ye/2H7f4sSP8X2LQmY4Hnw6OM46u9Acq+cOXkIuwpABFEKsPcU20iZ43
                  pFWJL0qBjl6L6w+FZhemmOsAqkdk1lzYcawuNvMlTFy2m/XBw94fvp+/BUBnPdPV9H4eDH
                  uNHDcaqfsINomzUdvyOfNou7F3FpgZsO2FPO2Jd6J2mn+FVkVtmHY/1zGGiKe7WO4FpsDd
                  ciCG4hMCdjx+uIBlHSatCyv4ji5EWSV7lktohrLEIrwFgabh/bAucfPTxsv8gVww9rzgL9
                  TgA7Q8WYo4L7Vf6b/ALtX757tXw8q0dEnamvOQ300AhErthzrLQ2Tje5BCkgseIBx1nOFC
                  TcBjF9HK+QxBWbKtvn1oDmEoZCczkQAAAAMBAAEAAAGAAwuMff7G5UmW+8pMIjwwkpqHLY
                  sXmVH5w1xgdF0X9GdL+dwZqV3uKnhvEVooDorkzWM6T9d+cXlriCaPhgx0OT4dhYj/1Ety
                  1fyN89BEuTrDF2SRkALvSc1GKW4Nc/32fqzCLONZXpAKp3retQoRud6kfMD5ZDOE+QvpiV
                  2QLu+LkXeF3xhy9QhL6OSFoJJmq+FUOseyF9a0vehHubiBleNH6eh+y2HZ23/cSSlVbrbz
                  RFDA1TBsOWInospSf/thfJo9ZBuSHQLmEy3vF13wf/Z7sm2/nkgAFfve/fqAVlr4MrrtdE
                  5ewaWrmxViMhRMislc65x5piUyoC8XViDPYOtIaBM8PiaLxGoJ5Xrq55QghRTV9A2NH3re
                  UyXaq3Q6HGqr20jpB7ZvmHfkseSACMlbG9rmhI9rmjnwA9RxdP1bgx9efQZ5/7/B+1p/go
                  8lRlbGrR0DSkKs9G+BIuHT/Uc1KA5XtYWE+L352Ktzmh7wMBjPDf9dzxwo++7nYvuBAAAA
                  wQCIURB16osDMwMsjaQouRp2OeZdY7uxU3bQjqDfxUVa3ViCF5RDGFWG8XcNmV69+Nnxrq
                  2wLs2zVWm+AYfrZku2q1umru6PyxmjvH000OtIsx7ZoTNjIz2kT2EL6Ban1OHC+B0cq+FP
                  Gu1Yoq8SISfHmhSXTw2UQS+oLYpE7PKfUwH5kMaHp+IG1URPl4wE5Y5c42w5lpSWVfXHiV
                  IOua2a4H9/wAkOz6MevIMJm9PPaxtZrIqIlfUHp7GSWwvvNqEAAADBAPdvbR56ngVgwEDL
                  pTSL3gUPIJSclK1RmynK+2/e11xE43DO26Yj9RcEIPTVQdrt7ZjsL7wTnd+zTNhblk+BN6
                  KHsTCvPanf3n5dmDRbkpocNhzvrxfcWBIrk0i8N1dkoE9KCJ13fyHh9r6p04xzezzn0pGY
                  tuY6GzvBoXZ5ZMLaHRtq9jsump6kebgmwVQsw/BJDSvbzRLKO7emazgYWHFn7pKd4nubs6
                  moqDtklaUW8cXOnb56yxttstRQe4P3MQAAAMEA05taYt522z6s+KVvh0aKolcvsf69VePQ
                  ivEB0QC5ii2o96P85lodZXZAgfMhS1L3T5ar9t8WMnKMMIW7WMGQDOk/PGo4JozvxpNvQ1
                  zOTh1/ih7VzYiwEBnR0C/d74DxkCSK9FtkOMcOBkT/C4lOMlX1epNk3y9X3tsS6l5dbcAb
                  4W3J2ZTSRHJLSh0uc6NB/r3QdAATbvsIDlZ6R27A+BqbRK9D5SL7DgeNmzeAQOUCWL+yoB
                  EoH6yK4dAFAKphAAAAEzE4NzEwNTEyNTA0QDE2My5jb20BAgMEBQYH
                  -----END OPENSSH PRIVATE KEY-----
  # SSH密钥对中的私钥
          dst_token:  36db96eca996009c384dceec48a1038f  # Gitee账户的私人令牌
          account_type: user  # 账户类型
          clone_style: "https"  # 使用https方式进行clone，也可以使用ssh
          debug: true  # 启用后会显示所有执行命令
          force_update: true  # 启用后，强制同步，即强制覆盖目的端仓库
          static_list: "python-nianbao-struct"  # 静态同步列表，在此填写需要同步的仓库名称，可填写多个
          timeout: '600s'  # git超时设置，超时后会自动重试git操作
